#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Thu Nov  4 13:59:35 2021

@author: hemma
"""

# Part 1 
# 1.1
def RetSquared(Number):
    Squared = Number ** 2
    return Squared

# 1.2
for i in range(1,11):
    print(RetSquared(i))
    
# 1.3, 1.5
def Raise(Number, Power=1):
    return Number ** Power

print(Raise(2, 3))

# 1.4 
for P in range(10):
    print(Raise(2, P))
    
# 1.6
def Raises(Number, Powers):
    ans = []
    for P in Powers:
        ans.append(Number ** P)
    return(ans)
print(Raises(Number=2, Powers=[1,3,4]))

# 1.7
def inverse(x):
    if x!=0:
        return 1/x
    else:
        return 'undefined'
print(inverse(2))
print(inverse(0))

# 1.8
def swapper(A, B):
    """ Swaps the values of the entered arguments """
    global a, b
    temp = A
    a = B
    b = temp
    
a, b = 1, 2
swapper(a, b)
print(a, b)

#  2.1
def CreateVerse(CurrentBottle):
    print(f'{CurrentBottle} bottles of beer on the wall, {CurrentBottle} bottles of beer.')
    # CurrentBottle -= 1
    print(f'Take one down, pass it around, {CurrentBottle - 1} bottles of beer on the wall.')

CreateVerse(99)

# 2.2
def SingSong(TotalBottles):
    for i in range(TotalBottles, 0, -1):
        CreateVerse(i)

SingSong(10)

# 2.3 
def FillVerses(TotalBottles):
    return [f'{CurrentBottle} bottles of beer on the wall, {CurrentBottle} bottles of beer.\nTake one down, pass it around, {CurrentBottle - 1} bottles of beer on the wall.' for CurrentBottle in range(TotalBottles, 0, -1)]

for i in FillVerses(10):
    print(i)
    
    
# PART 2
# 3.1
def func_a(*nums):
    return sum(nums)
print(func_a(1,2,3,4))

def func_b(*nums):
    num = nums[0]
    for n in nums[1:]:
        num *= n
    return (num)
print(func_b(1,2,3,4))


# 3.2
def func_c(*nums):
    return (min(nums), max(nums), sum(nums)/len(nums))

print(func_c(1,2,3))

# PART 3
# 5.1 

def shreik(N):
    if N == 1:
        return 1
    else:
        return N * shreik(N-1)
print(shreik(4))

# 5.2 
def Fib(N):
    if N == 1:
        return 1
    elif N == 2:
        return 1
    else:
        return Fib(N-1) + Fib(N-2)
    
for i in range(1,15):
    print(Fib(i), end=' ')


# PART 4
print()

# 6.1 
def median_3(a, b, c):
    return sorted([a, b, c])[1]

print(median_3(5,5,2))


# 6.2 
# def sumdigits(num):
#     return 

import math

# print number of digits in anumber using base 10 logarithms 
num = 1234
digits = int(math.log10(num))+1
print(num, digits)

# isolate each number by removing trailing digits and leading digits
num = 1234
A = num//1000 # remove trailing digits
print(A)
B = A % 10    # remove leading digits 
print(B)
print()


# put it toteher to answer the question
num = 1238267
sum = 0
for i in range(int(math.log10(num)), -1, -1):
    A = num//(10**i)
    B = A % 10
    print(A, B)
    sum += B
print(sum)



    
    


    
    

        
    


    
